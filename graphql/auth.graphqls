type User {
    id: ID!
    username: String!
    email: String!
    isActive: Boolean!
    isAdmin: Boolean!
}

type Tokens {
    accessToken: String!
    refreshToken: String!
}

type Confirm {
    ok: Boolean!
    token: String!
}

type RequestResetPassword {
    ok: Boolean!
}

type RequestConfirmAccount {
    ok: Boolean!
}

type DeleteAccount {
    ok: Boolean!
}

type ChangePasswordConfirm {
    ok: Boolean!
}

input NewUser {
    username: String!
    email: String!
    password: String!
}

input Identifier {
    username: String!
    password: String!
}

input UpdateUser {
    username: String
    email: String
}

input ConfirmIdentifier {
    token: String!
}

input RequestPasswordResetIdentifier {
    email: String!
}

input ResetPasswordIdentifier {
    password: String!
    token: String!
}

input ChangePassword {
    password: String!
    confirmPassword: String!
    oldPassword: String!
}

type Query {
    users: [User!]!
    currentUser: User! @isLogged
}

type Mutation {
    login(input: Identifier!): Tokens!
    signUp(input: NewUser!): User!
    confirmAccount(input: ConfirmIdentifier): Confirm!
    updateAccount(input: UpdateUser!): User! @isActive
    changePassword(input: ChangePassword): ChangePasswordConfirm! @isActive
    deleteAccount: DeleteAccount! @isLogged
    requestConfirmAccount: RequestConfirmAccount! @isLogged
    requestResetPassword(
        input: RequestPasswordResetIdentifier!
    ): RequestResetPassword!
    resetPassword(input: ResetPasswordIdentifier!): Confirm! @isLogged
}
